<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PCBManufacturing.Styles">

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border x:Name="Border"
                Background="Transparent"
                BorderThickness="0,0,0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandededArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Border x:Name="Placeholder"
                        BorderThickness="0"
                        Opacity="0"
                        CornerRadius="10"
                        Margin="0,2"
                        Background="White"/>
                <Path x:Name="CollapsedArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="{DynamicResource RightArrowPathData}">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <Path x:Name="ExpandededArrow"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Visibility="Collapsed"
                      Data="{DynamicResource DownArrowPathData}">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Placeholder" Property="Opacity" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource SecondaryBackgroundBrush}"
                                Background="{DynamicResource MainBackgroundBrush}" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0"
                                                  Margin="4"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                                <ToggleButton Grid.Column="1" OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                </ToggleButton>
                            </Grid>
                        </Border>
                        <Border x:Name="Content" 
                                Grid.Row="1"
                                Background="{DynamicResource SecondaryBackgroundBrush}">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesierHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ListExpanderStyle" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource MainForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border x:Name="Border"
                                Grid.Row="0"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource SecondaryBackgroundBrush}"
                                Background="{DynamicResource MainBackgroundBrush}" >
                            <Grid>

                                <ToggleButton OverridesDefaultStyle="True"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              Template="{StaticResource ExpanderToggleButton}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                
                                <ContentPresenter Margin="4"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True" />
                               

                            </Grid>
                        </Border>
                        <Border x:Name="Content" 
                                Grid.Row="1"
                                Background="{DynamicResource SecondaryBackgroundBrush}">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesierHeight, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>